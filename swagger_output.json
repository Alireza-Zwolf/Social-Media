{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Social Media API Documentation",
    "description": "Documentation for the Social Media API Coded by Alireza Arbabi, made by <b>Swagger Autogen</b>."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "users details"
    },
    {
      "name": "Posts",
      "description": "posts details"
    },
    {
      "name": "Likes",
      "description": "likes details"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "get all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "array of users returned"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                },
                "age": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "isAdmin": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "get an specific user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update specific user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user is updated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "user not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "api/users/{id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete specific user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user is deleted successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "user not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "description": "get all posts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "array of posts returned"
          },
          "400": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Posts"
        ],
        "description": "Create new post",
        "parameters": [
          {
            "name": "writerId",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "text": {
                  "example": "any"
                }
              }
            },
            "description": "The id of the writer",
            "required": true
          },
          {
            "name": "title",
            "in": "body",
            "description": "The title of the post",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          {
            "name": "text",
            "in": "body",
            "description": "The text of the post",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          {
            "name": "date",
            "description": "The time of creating the post",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "post created successfully"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/posts/{id}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "description": "get an specific post by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "specific post returned"
          }
        ],
        "responses": {
          "200": {
            "description": "specific post returned"
          },
          "404": {
            "description": "post not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "description": "Update specific post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "writerId",
            "in": "body",
            "description": "The id of the writer",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          {
            "name": "title",
            "in": "body",
            "description": "The title of the post",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          {
            "name": "text",
            "in": "body",
            "description": "The text of the post",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          {
            "name": "date",
            "description": "The time of creating the post",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "post is updated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "post not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "description": "Delete specific post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "post deleted successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "post not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/DeleteAll": {
      "delete": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api/likes": {
      "get": {
        "tags": [
          "Likes"
        ],
        "description": "get all likes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "array of likes returned"
          },
          "400": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Likes"
        ],
        "description": "Create new like",
        "parameters": [
          {
            "name": "UserId",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "example": "any"
                },
                "writerId": {
                  "example": "any"
                }
              }
            },
            "description": "The id of the liker",
            "required": true
          },
          {
            "name": "postId",
            "in": "body",
            "description": "The id of the liked post",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          {
            "name": "date",
            "description": "The time of creating the like",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "like created successfully"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/likes/{id}": {
      "get": {
        "tags": [
          "Likes"
        ],
        "description": "get an specific like by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "specific like returned"
          }
        ],
        "responses": {
          "200": {
            "description": "specific like returned"
          },
          "404": {
            "description": "like not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Likes"
        ],
        "description": "Delete specific post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "like deleted successfully"
          },
          "404": {
            "description": "like not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "apis": [
    "routes/users.js"
  ]
}